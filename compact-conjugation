<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pret√©rito Pluscuamperfecto Practice</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background: transparent;
            overflow-x: hidden;
        }

        .practice-module {
            --primary-color: #F2CB05;
            --secondary-color: #00994D;
            --accent-color: #C72C27;
            --text-color: #333;
            --background-color: #f9f9f9;
            --highlight-color: rgba(242, 203, 5, 0.2);
            --success-color: #4CAF50;
            --error-color: #f44336;
            --shadow-soft: 0 4px 6px rgba(0,0,0,0.1);
            
            font-family: Arial, sans-serif;
            max-width: 100%;
            margin: 0 auto;
            padding: 12px;
            border: 3px solid var(--secondary-color);
            border-radius: 12px;
            background: white;
            box-shadow: var(--shadow-soft);
        }

        .section-title {
            color: var(--secondary-color);
            font-size: 1.1em;
            font-weight: bold;
            margin-bottom: 8px;
            padding-bottom: 5px;
            border-bottom: 3px solid var(--secondary-color);
            text-align: center;
        }

        .instructions {
            background: var(--background-color);
            padding: 8px;
            border-radius: 6px;
            margin-bottom: 10px;
            font-size: 0.85em;
            line-height: 1.3;
        }

        .example-box {
            background: var(--highlight-color);
            padding: 10px;
            border-radius: 6px;
            margin: 10px 0;
            font-size: 0.85em;
        }

        .verb-form-input {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .verb-form-group {
            position: relative;
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .verb-form-group label {
            font-weight: bold;
            font-size: 0.9em;
            color: var(--text-color);
        }

        .input-row {
            display: flex;
            align-items: center;
            gap: 6px;
            flex-wrap: wrap;
        }

        .verb-form-group input {
            padding: 8px 10px;
            border: 2px solid #ddd;
            border-radius: 5px;
            flex: 1;
            min-width: 150px;
            font-size: 0.9em;
            transition: all 0.3s;
        }

        .verb-form-group input:focus {
            border-color: var(--secondary-color);
            outline: none;
            box-shadow: 0 0 0 2px rgba(0, 153, 77, 0.2);
        }

        .verb-form-group input.correct {
            background: #e8f5e9;
            border-color: var(--success-color);
        }

        .verb-form-group input.incorrect {
            background: #ffebee;
            border-color: var(--error-color);
        }

        .accent-buttons {
            display: flex;
            gap: 3px;
            flex-wrap: wrap;
        }

        .accent-button {
            background: white !important;
            color: var(--text-color) !important;
            border: 1px solid #FFA500 !important;
            border-radius: 4px !important;
            padding: 4px 8px !important;
            cursor: pointer;
            font-size: 0.85em;
            min-width: 28px;
            transition: background 0.2s;
        }

        .accent-button:hover {
            background: #fff3e0 !important;
        }

        .check-button {
            background: var(--secondary-color);
            color: white;
            border: none;
            padding: 6px 14px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.85em;
            font-weight: bold;
            transition: all 0.3s;
        }

        .check-button:hover {
            background: #007a3d;
            transform: translateY(-2px);
        }

        .hint-container {
            position: relative;
            display: inline-block;
            margin-left: 6px;
        }

        .hint-icon {
            background: #FF8C00;
            color: white;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
            border: none;
            padding: 0;
        }

        .hint-content {
            position: absolute;
            background: #333;
            color: white;
            padding: 6px 10px;
            border-radius: 4px;
            font-size: 12px;
            width: max-content;
            max-width: 200px;
            z-index: 100;
            top: -8px;
            left: calc(100% + 8px);
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.2s, visibility 0.2s;
        }

        .hint-container:hover .hint-content {
            opacity: 1;
            visibility: visible;
        }

        .hint-content::before {
            content: '';
            position: absolute;
            top: 8px;
            left: -5px;
            border-width: 5px 5px 5px 0;
            border-style: solid;
            border-color: transparent #333 transparent transparent;
        }

        @media (max-width: 400px) {
            .practice-module {
                padding: 15px;
            }

            .input-row {
                flex-direction: column;
                align-items: stretch;
            }

            .verb-form-group input {
                width: 100%;
                min-width: unset;
            }

            .hint-content {
                position: fixed;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
                max-width: 80vw;
            }

            .hint-content::before {
                display: none;
            }
        }
    </style>
</head>
<body>
<div class="practice-module">
    <div class="section-title">üìù Pret√©rito Pluscuamperfecto</div>

    <div class="instructions">
        Write the verbs <strong>perder</strong> and <strong>tener</strong> in the Pret√©rito Pluscuamperfecto for <strong>yo</strong>.
    </div>

    <div class="example-box">
        <strong>Example:</strong><br>
        Trabajar: (Yo) <strong>hab√≠a trabajado</strong>
    </div>

    <div class="verb-form-input">
        <div class="verb-form-group">
            <label>perder (yo):</label>
            <div class="input-row">
                <input type="text" id="perder-yo" placeholder="Type your answer">
                <div class="accent-buttons">
                    <button type="button" class="accent-button" data-accent="√°">√°</button>
                    <button type="button" class="accent-button" data-accent="√©">√©</button>
                    <button type="button" class="accent-button" data-accent="√≠">√≠</button>
                    <button type="button" class="accent-button" data-accent="√≥">√≥</button>
                    <button type="button" class="accent-button" data-accent="√∫">√∫</button>
                </div>
                <button class="check-button" onclick="checkAnswer('perder-yo', 'hab√≠a perdido')">Check</button>
            </div>
        </div>
        
        <div class="verb-form-group">
            <label>tener (yo):</label>
            <div class="input-row">
                <input type="text" id="tener-yo" placeholder="Type your answer">
                <div class="accent-buttons">
                    <button type="button" class="accent-button" data-accent="√°">√°</button>
                    <button type="button" class="accent-button" data-accent="√©">√©</button>
                    <button type="button" class="accent-button" data-accent="√≠">√≠</button>
                    <button type="button" class="accent-button" data-accent="√≥">√≥</button>
                    <button type="button" class="accent-button" data-accent="√∫">√∫</button>
                </div>
                <button class="check-button" onclick="checkAnswer('tener-yo', 'hab√≠a tenido')">Check</button>
            </div>
        </div>
    </div>
</div>

<script>
function normalizeString(str) {
    return str.trim().toLowerCase().replace(/\s/g, '');
}

function removeAccents(str) {
    return str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
}

function createHintButton(hintText) {
    const hintContainer = document.createElement('div');
    hintContainer.className = 'hint-container';

    const button = document.createElement('button');
    button.className = 'hint-icon';
    button.textContent = '?';
    button.setAttribute('aria-label', 'Show hint');
    button.setAttribute('type', 'button');

    const hintContent = document.createElement('div');
    hintContent.className = 'hint-content';
    hintContent.setAttribute('role', 'tooltip');
    hintContent.textContent = hintText;

    hintContainer.appendChild(button);
    hintContainer.appendChild(hintContent);

    return hintContainer;
}

function checkAnswer(inputId, correctAnswer) {
    const input = document.getElementById(inputId);
    const userAnswer = input.value;
    const normalizedUserAnswer = normalizeString(userAnswer);
    const normalizedCorrectAnswer = normalizeString(correctAnswer);
    const noAccentUserAnswer = removeAccents(normalizedUserAnswer);
    const noAccentCorrectAnswer = removeAccents(normalizedCorrectAnswer);

    // Remove existing hint if present
    const existingHint = input.parentNode.querySelector('.hint-container');
    if (existingHint) {
        existingHint.remove();
    }

    // Remove previous styling
    input.classList.remove('correct', 'incorrect');

    if (normalizedUserAnswer === normalizedCorrectAnswer) {
        input.classList.add('correct');
        input.setAttribute('aria-invalid', 'false');
        setTimeout(() => {
            input.classList.remove('correct');
        }, 2000);
        return;
    }

    // Generate hint message
    let hintMessage = "";
    if (noAccentUserAnswer === noAccentCorrectAnswer) {
        hintMessage = "Your answer looks really close! What might be missing?";
    } else if (!normalizedUserAnswer.startsWith("hab√≠a")) {
        hintMessage = 'Think about the structure. What helping verb do we use?';
    } else if (!normalizedUserAnswer.endsWith("ido") && 
               (inputId.includes("perder") || inputId.includes("tener"))) {
        hintMessage = 'Remember the past participle ending for -er verbs.';
    } else if (normalizedUserAnswer.length < normalizedCorrectAnswer.length) {
        hintMessage = 'Your answer seems incomplete. Check the verb form.';
    } else {
        hintMessage = "Review the verb conjugation. What needs adjustment?";
    }

    const hintButton = createHintButton(hintMessage);
    input.parentNode.insertBefore(hintButton, input.nextSibling);

    input.classList.add('incorrect');
    input.setAttribute('aria-invalid', 'true');
    setTimeout(() => {
        input.classList.remove('incorrect');
    }, 2000);

    input.focus();
}

document.addEventListener('DOMContentLoaded', () => {
    // Add keyboard event listeners for input fields
    document.querySelectorAll('input[type="text"]').forEach(input => {
        input.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                const correctAnswer = {
                    'perder-yo': 'hab√≠a perdido',
                    'tener-yo': 'hab√≠a tenido'
                }[input.id];
                if (correctAnswer) {
                    checkAnswer(input.id, correctAnswer);
                }
            }
        });
    });
    
    // Add click handlers for accent buttons
    document.querySelectorAll('.accent-button').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const accent = this.dataset.accent;
            const input = this.closest('.verb-form-group').querySelector('input');
            if (input) {
                const start = input.selectionStart;
                const end = input.selectionEnd;
                input.value = input.value.substring(0, start) + accent + input.value.substring(end);
                input.selectionStart = input.selectionEnd = start + 1;
                input.focus();
            }
        });
    });
});
</script>
</body>
</html>
